@using MudBlazor.Utilities
<CascadingValue Value=false Name="UsePopoverProvider">
    <MudThemeProvider @ref="_mudThemeProvider" Theme="MyTheme" @bind-IsDarkMode="_isDarkMode"/>
</CascadingValue>

@code {

    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();

            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);

            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;

        StateHasChanged();

        return Task.CompletedTask;
    }

    public static MudColor PrimaryPurpleLight => "#594AE2";
    public static MudColor SurfaceLight => "#FFFFFF";

    public static MudColor PrimaryPurpleDark => "#6859f0";
    public static MudColor SurfaceDark => "#1a1a27";

    public static MudTheme MyTheme => new()
    {
        Palette = new PaletteLight
        {
            AppbarBackground = PrimaryPurpleLight,
            Primary = PrimaryPurpleLight,
            Secondary = Colors.Red.Accent3,
            Tertiary = Colors.Orange.Accent3
        },
        PaletteDark = new PaletteDark
        {
            Background = SurfaceDark,
            Dark = SurfaceDark,
            Surface = SurfaceDark,

            AppbarBackground = PrimaryPurpleDark,
            Primary = PrimaryPurpleDark,
            Secondary = Colors.Red.Accent2,
            Tertiary = Colors.Orange.Accent2
        }
    };

}