@using Vanessave.Services
@using Vanessave.Utils
@using System.Net.Mime
@inject SaveCipherProvider SaveCipher

<MudFileUpload T="IBrowserFile" Accept="@(AllowJson ? ".dat, .json" : ".dat")" FilesChanged="UploadFiles">
    <ButtonTemplate>
        <MudButton HtmlTag="label"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.CloudUpload"
                   for="@context.Id">
            @Label
        </MudButton>
    </ButtonTemplate>
</MudFileUpload>

@code {
    public event Action<string>? OnSaveLoad;

    [Parameter]
    public string Label { get; set; } = "Pick a file";

    [Parameter]
    public bool AllowJson { get; set; } = false;

    [Parameter]
    public bool Prettify { get; set; } = false;

    public string FileName { get; set; } = "";

    private async Task UploadFiles(IBrowserFile file)
    {
        FileName = file.Name;

        // No need to decrypt and deserialize if it's already an extracted json save
        string systemSave;
        if (AllowJson && FileName.EndsWith(".json"))
        {
            systemSave = await new StreamReader(file.OpenReadStream()).ReadToEndAsync();
        }
        else
        {
            systemSave = await SaveCipher.DecryptSave(file.OpenReadStream());
        }

        OnSaveLoad?.Invoke(Prettify ? JsonUtils.Prettify(systemSave) : systemSave);
    }
}